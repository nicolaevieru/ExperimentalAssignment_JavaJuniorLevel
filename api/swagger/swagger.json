{
	"swagger": "2.0",
	"info": {
		"description": "Api Documentation",
		"version": "1.0",
		"title": "VinylStore API Documentation",
		"termsOfService": "urn:tos",
		"contact": {},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"host": "localhost:8080",
	"basePath": "/",
	"tags": [
		{
			"name": "vinyl-controller",
			"description": "Vinyl Controller"
		},
		{
			"name": "account-controller",
			"description": "Account Controller"
		},
		{
			"name": "basic-error-controller",
			"description": "Basic Error Controller"
		},
		{
			"name": "cart-controller",
			"description": "Cart Controller"
		}
	],
	"paths": {
		"/api/customers": {
			"get": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a store manager to get a list of all registered customers.",
				"summary": "getCustomers",
				"operationId": "getCustomersUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CustomerListDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/orders/{id}": {
			"put": {
				"tags": [
					"cart-controller"
				],
				"description": "Used by a store manager to change the status of any order.",
				"summary": "changeOrder",
				"operationId": "changeOrderUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Cart id for witch the status is changed.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ChangeOrderStatusDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ChangeOrderStatusDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/users": {
			"post": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a unregistered customer to create a new account.",
				"summary": "createAccount",
				"operationId": "createAccountUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountCreateDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AccountCreateDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/users/login": {
			"post": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a registered customer to login.",
				"summary": "loginAccount",
				"operationId": "loginAccountUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountLoginDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/users/{id}": {
			"delete": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a customer to delete his own account.It can also be used by a manager to  delete the account of any customer.",
				"summary": "deleteAccount",
				"operationId": "deleteAccountUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "The id of the account witch needs to be deleted.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "credentials",
						"description": "credentials",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AccountDeleteDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AccountDeleteDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/users/{userId}/cart": {
			"get": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a customer to get his cart details.Also used by a manager to get the details of any other customer.",
				"summary": "getCartDetails",
				"operationId": "getCartDetailsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "The id of the user for witch the active cart details needs to be seen.",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CartDetailsDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/users/{userId}/cart/{itemId}": {
			"delete": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a customer in order to remove an item from his cart.After the request the item will be removed from cart and the cart details will be updated.",
				"summary": "removeItemFromCart",
				"operationId": "removeItemFromCartUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "Id of the user witch wants to perform the request.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "itemId",
						"in": "path",
						"description": "Id of the item witch needs to be removed from active cart.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "requestBody",
						"description": "requestBody",
						"required": true,
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AccountDeleteDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/users/{userId}/orders": {
			"get": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a manager to get a list of all orders from the store for a specific customer.",
				"summary": "getAllCustomerOrders",
				"operationId": "getAllCustomerOrdersUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "Id of customer for witch the orders need to be seen.",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OrderDto"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"account-controller"
				],
				"description": "Used by a customer in order to place an order for the items from his active cart.",
				"summary": "placeOrder",
				"operationId": "placeOrderUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "The id of the customer witch wants to perform the request.",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/vinyls": {
			"get": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a customer to get a full list of all available vinyls from the shop.",
				"summary": "getVinyls",
				"operationId": "getVinylsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VinylCanOrderListDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a manager to add a new vinyl to the shop.",
				"summary": "createVinyl",
				"operationId": "createVinylUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "vinylCreateDto",
						"description": "vinylCreateDto",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VinylCreateDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Vinyl"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/vinyls/inventory": {
			"get": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a manager to get an inventory of the available vinyls from the shop.",
				"summary": "getInventory",
				"operationId": "getInventoryUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VinylInventoryListDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/vinyls/{id}": {
			"get": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a customer to get the details of a specific vinyl.",
				"summary": "getDetails",
				"operationId": "getDetailsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Vinyl id for witch the details need to be seen.",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VinylDetailsDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a store manager to remove a vinyl from the online shop.",
				"summary": "deleteVinyl",
				"operationId": "deleteVinylUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "Vinyl id witch needs to be removed.",
						"required": true,
						"type": "integer",
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VinylCanOrderListDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"put": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a store manager in order to update the information of a specific vinyl.",
				"summary": "updateVinylInfo",
				"operationId": "updateVinylInfoUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id of the vinyl witch needs to be updated.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "vinylUpdateDto",
						"description": "vinylUpdateDto",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VinylCreateDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Vinyl"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/vinyls/{vinylId}/cart": {
			"post": {
				"tags": [
					"vinyl-controller"
				],
				"description": "Used by a customer in order to add one or more vinyls(of the same type e.g. with the same id) to his active cart.",
				"summary": "addVinylToCart",
				"operationId": "addVinylToCartUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "vinylId",
						"in": "path",
						"description": "Id of the vinyl that he wants to add to his cart.",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "requestBody",
						"description": "requestBody",
						"required": true,
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Vinyl"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/error": {
			"get": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		}
	},
	"definitions": {
		"Account": {
			"type": "object",
			"properties": {
				"accountStatus": {
					"$ref": "#/definitions/AccountStatus"
				},
				"accountType": {
					"$ref": "#/definitions/AccountType"
				},
				"email": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"lastName": {
					"type": "string"
				},
				"passwordHash": {
					"type": "string"
				}
			}
		},
		"AccountDeleteDto": {
			"type": "object",
			"properties": {
				"password": {
					"type": "string"
				},
				"token": {
					"type": "string"
				}
			}
		},
		"Vinyl": {
			"type": "object",
			"properties": {
				"available": {
					"type": "boolean"
				},
				"cost": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"stock": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"VinylCanOrderListDto": {
			"type": "object",
			"properties": {
				"vinyls": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/VinylCanOrderDto"
					}
				}
			}
		},
		"AccountCreateDto": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			}
		},
		"CustomerDto": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				}
			}
		},
		"ModelAndView": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				},
				"model": {
					"type": "object"
				},
				"modelMap": {
					"type": "object",
					"additionalProperties": {
						"type": "object"
					}
				},
				"reference": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
						"100",
						"101",
						"102",
						"103",
						"200",
						"201",
						"202",
						"203",
						"204",
						"205",
						"206",
						"207",
						"208",
						"226",
						"300",
						"301",
						"302",
						"303",
						"304",
						"305",
						"307",
						"308",
						"400",
						"401",
						"402",
						"403",
						"404",
						"405",
						"406",
						"407",
						"408",
						"409",
						"410",
						"411",
						"412",
						"413",
						"414",
						"415",
						"416",
						"417",
						"418",
						"419",
						"420",
						"421",
						"422",
						"423",
						"424",
						"426",
						"428",
						"429",
						"431",
						"451",
						"500",
						"501",
						"502",
						"503",
						"504",
						"505",
						"506",
						"507",
						"508",
						"509",
						"510",
						"511"
					]
				},
				"view": {
					"$ref": "#/definitions/View"
				},
				"viewName": {
					"type": "string"
				}
			}
		},
		"CustomerListDto": {
			"type": "object",
			"properties": {
				"customers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CustomerDto"
					}
				}
			}
		},
		"Token": {
			"type": "object",
			"properties": {
				"account": {
					"$ref": "#/definitions/Account"
				},
				"hash": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"VinylDetailsDto": {
			"type": "object",
			"properties": {
				"cost": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"stock": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"AccountLoginDto": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
			}
		},
		"View": {
			"type": "object",
			"properties": {
				"contentType": {
					"type": "string"
				}
			}
		},
		"ChangeOrderStatusDto": {
			"type": "object",
			"properties": {
				"status": {
					"type": "string",
					"enum": [
						"ACTIVE",
						"COMPLETED",
						"PROCESSING"
					]
				},
				"token": {
					"type": "string"
				}
			}
		},
		"AccountType": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"type": {
					"type": "string",
					"enum": [
						"STORE_MANAGER",
						"CUSTOMER"
					]
				}
			}
		},
		"VinylCreateDto": {
			"type": "object",
			"properties": {
				"cost": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"stock": {
					"type": "integer",
					"format": "int32"
				},
				"token": {
					"type": "string"
				},
				"tokenObject": {
					"$ref": "#/definitions/Token"
				}
			}
		},
		"AccountStatus": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"status": {
					"type": "string",
					"enum": [
						"DELETED",
						"ACTIVE"
					]
				}
			}
		},
		"CartDetailsDto": {
			"type": "object",
			"properties": {
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ItemDto"
					}
				},
				"numberOfItems": {
					"type": "integer",
					"format": "int32"
				},
				"totalCost": {
					"type": "number",
					"format": "double"
				}
			}
		},
		"ItemDto": {
			"type": "object",
			"properties": {
				"cost": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"quantity": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"OrderDto": {
			"type": "object",
			"properties": {
				"cartState": {
					"type": "string",
					"enum": [
						"ACTIVE",
						"COMPLETED",
						"PROCESSING"
					]
				},
				"cost": {
					"type": "number",
					"format": "double"
				},
				"orderDate": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"VinylInventoryListDto": {
			"type": "object",
			"properties": {
				"vinyls": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/VinylInventoryDto"
					}
				}
			}
		},
		"VinylInventoryDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"stock": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"VinylCanOrderDto": {
			"type": "object",
			"properties": {
				"cost": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				}
			}
		}
	}
}